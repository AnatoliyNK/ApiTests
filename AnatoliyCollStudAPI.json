{
	"info": {
		"_postman_id": "1b5b5a3d-8741-4770-b2e1-b2914d68f24d",
		"name": "_6_Student API For git",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7092110"
	},
	"item": [
		{
			"name": "sign-in (Login)",
			"item": [
				{
					"name": "Success Teacer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your user email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.email).to.eql(\"anatoliy.nk84+1@gmail.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your user role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"TEACHER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Set up token\", function () {\r",
									"    pm.environment.set(\"teacherToken\", pm.response.json().token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anatoliy.nk84+1@gmail.com\",\r\n  \"password\": \"a052623\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/sign-in",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"sign-in"
							]
						}
					},
					"response": []
				},
				{
					"name": "Success Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your user email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.email).to.eql(\"anatoliy.nk84+3@gmail.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your user role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"STUDENT\");\r",
									"});\r",
									"\r",
									"pm.test(\"Set up token\", function () {\r",
									"    pm.environment.set(\"studentToken\", pm.response.json().token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anatoliy.nk84+3@gmail.com\",\r\n  \"password\": \"a052623\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/sign-in",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"sign-in"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "my-assignments (Assignments)",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-assignments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"Error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-assignments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "No permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Not enough permissions to process request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-assignments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-assignments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "my-grades (My grades)",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-grades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-grades"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"Error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-grades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-grades"
							]
						}
					},
					"response": []
				},
				{
					"name": "No permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"error\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Not enough permissions to process request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/my-grades",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"my-grades"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}