{
	"info": {
		"_postman_id": "1972f35e-8b53-4e02-8f64-02baf450ddda",
		"name": "_0_1_E2E External data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7092110"
	},
	"item": [
		{
			"name": "TeacherLogin",
			"item": [
				{
					"name": "Success Teacer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your user email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.email).to.eql(\"anatoliy.nk84+1@gmail.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your user role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"TEACHER\");\r",
									"});\r",
									"\r",
									"pm.test(\"Set up token\", function () {\r",
									"    pm.environment.set(\"teacherToken\", pm.response.json().token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"anatoliy.nk84+1@gmail.com\",\r\n  \"password\": \"a052623\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/sign-in",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"sign-in"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CreateUser",
			"item": [
				{
					"name": "Registration new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create new user >>\", function () {});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User was created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{newUserEmail}}\",\r\n  \"name\": \"Jon Snow1025\",\r\n  \"group\": \"ASK111623\",\r\n  \"password\": \"{{newUserPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/sign-up",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"sign-up"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get activation code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Set environment\", function () {\r",
									"    jsonData = pm.response.json();\r",
									"    pm.environment.set(\"userId\",         jsonData[0].id);\r",
									"    pm.environment.set(\"activationCode\", jsonData[0].activationCode);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/api/users?_where=(email,eq,{{newUserEmail}})",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "_where",
									"value": "(email,eq,{{newUserEmail}})"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User was activated\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create new user <<\", function () {});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/activate/{{userId}}/{{activationCode}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"activate",
								"{{userId}}",
								"{{activationCode}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "StudentLogin",
			"item": [
				{
					"name": "Success Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your user email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.email).to.eql(\"anatoliy.nk84+3@gmail.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your user role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"STUDENT\");\r",
									"});\r",
									"\r",
									"pm.test(\"Set up token\", function () {\r",
									"    pm.environment.set(\"studentToken\", pm.response.json().token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{newUserEmail}}\",\r\n  \"password\": \"{{newUserPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/sign-in",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"sign-in"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create quiz",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create new quiz >>\", function () {});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get quiz ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"quizId\", jsonData.id);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create new quiz <<\", function () {});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Anatoliy Demo Quiz Postman\",\r\n  \"totalScore\": 18,\r\n  \"passingPercentage\": 75,\r\n  \"showStopperQuestion\": 1,\r\n  \"questions\": {{questions}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/quiz",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"quiz"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assign quiz",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assign new quiz >>\", function () {});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get quiz ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"assignmentId\", jsonData[0].id);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Assign new quiz <<\", function () {});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"quizId\": {{quizId}},\r\n  \"userIds\": [{{userId}}]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/assignment",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"assignment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Submit quiz",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Submit new quiz >>\", function () {});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Submit new quiz >>\", function () {});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{studentToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"assignmentId\": {{assignmentId}},\r\n  \"answers\": {{answers}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/submit-assignment",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"submit-assignment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Grade quiz",
			"item": [
				{
					"name": "Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Grade new quiz >>\", function () {});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Grade new quiz <<\", function () {});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{teacherToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"summary\": \"Summary from teacher\",\r\n  \"result\": \"PASSED\",\r\n  \"grades\": [\r\n    {\r\n      \"comment\": \"Teacher comment\",\r\n      \"additionalScore\": {{additionalScore}}\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/assignment/{{assignmentId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"assignment",
								"{{assignmentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete data",
			"item": [
				{
					"name": "Delete assignment",
					"item": [
						{
							"name": "Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete assignment >>\", function () {});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete assignment <<\", function () {});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/assignment/{{assignmentId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"assignment",
										"{{assignmentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete quiz",
					"item": [
						{
							"name": "Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete quiz >>\", function () {});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Delete quiz <<\", function () {});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"idesArray = pm.environment.get(\"idesArray\");\r",
											"if (Array.isArray(idesArray)){\r",
											"    if (idesArray.length > 0) {\r",
											"    pm.environment.set(\"quizId\", idesArray[0]);\r",
											"    idesArray.splice(0, 1);\r",
											"    pm.environment.set(\"idesArray\", idesArray);\r",
											"    }\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/quiz/{{quizId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"quiz",
										"{{quizId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete user",
					"item": [
						{
							"name": "Success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete user >>\", function () {});\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete user <<\", function () {});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"group\": \"gds125\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/users/{{userId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"users",
										"{{userId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}